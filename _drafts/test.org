so with the text...
#+NAME: code:1
#+BEGIN_SRC shell-script
echo hello world 
#+END_SRC
[[code:1]] is a reference to src block

#+NAME: eqn:1
\begin{equation}
    f(x) =  \sum\limits_0^\infty(f^{(n)}(x)|_{x=0} \cdot x)
\end{equation}

And this is an equation [[eqn:1]]


- one item
- <<target>>another item
Here we refer to item [[target]].  [[target][Find my target]]


$\xRightarrow[\text{below}]{\text{above}}$



+------------+-----------+----------+----------+-------------+
|            |             Singular            | Plural      |
|            +-----------+----------+----------+-------------+
|            | Masculine | Neuter   | Feminine | All genders |
+------------+-----------+----------+----------+-------------+
| Nominative | *der*     | *das*    | *die*    | *die*       |
| Accusative | *den*     | *das*    | *die*    | *die*       |
| Dative     | *dem*     | *dem*    | *der*    | *denen*     |
| Genitive   | *dessen*  | *dessen* | *deren*  | *deren*     |
+------------+-----------+----------+----------+-------------+

|<property>标签|用来将类中的普通属性与表中的字段建立映射.|
|name| 类中属性名                                                                                        |
|column| 表中的字段名.(如果类中的属性名与表中的字段名一致,那么column可以省略.) |
|length|数据长度                                                                                          |
|type| 数据类型（一般都不需要编写，如果写需要按着规则来编写）|


|    |   |       |
|    |   |       |
|    |   |       |
|    |   |       |





|   |Hibernate的数据类型| type="string"|
|   |Java的数据类型| type="java.lang.String"|
|   |数据库字段的数据类型|<column name="name" sql-type="varchar"/>|

     +-----------------+--------------------------------+-----------------+
     |     Command     |          Description           |   Key Binding   |
     +-----------------+--------------------------------+-----------------+
     |  forward-char   |Move point right N characters   |       C-f       |
     |                 |(left if N is negative).        |                 |
     |                 |                                |                 |
     +-----------------+--------------------------------+-----------------+
     |  backward-char  |Move point left N characters    |       C-b       |
     |                 |(right if N is negative).       |                 |
     |                 |                                |                 |
     +-----------------+--------------------------------+-----------------+



| Header1 | Header2 | Header3 |
|---------+---------+---------|
| Merged  | Text1   | Text2   |
| text    |---------+---------|
| here    | Text3   | Text4   |


+---------+---------+---------+
| Header1 | Header2 | Header3 |
+---------+---------+---------+
| Merged  | Text1   | Text2   |
| text    +---------+---------+
| here    | Text3   | Text4   |
+---------+---------+---------+

+---+-----+-----------+
|   | A   | B         |
+---+-----+-----+-----+
| 1 | A1  | B1  | C1  |
|   |     +-----+-----+
|   | A1b | B1b | C1b |
+---+-----+-----+-----+
| 2 | A2  |   B2 C2   |
|   +-----+           |
|   | A2b |  B2b C2b  |
+---+-----+-----------+

+--------------------------+-----------------------------------------------------------------------+
|    <property> 标签       | 用来将类中的普通属性与表中的字段建立映射.                             |
|    name                  | 类中属性名                                                            |
|    column                | 表中的字段名.(如果类中的属性名与表中的字段名一致,那么column可以省略.) |
|    length                | 数据长度                                                              |
|    type                  | 数据类型（一般都不需要编写，如果写需要按着规则来编写）                |
+---+----------------------+-----------------------------------------------------------------------+
|   | Hibernate的数据类型  | type="string"                                                         |
+---+----------------------+-----------------------------------------------------------------------+
|   | Java的数据类型       | type="java.lang.String"                                               |
+---+----------------------+-----------------------------------------------------------------------+
|   | 数据库字段的数据类型 | <column name="name" sql-type="varchar"/>                              |
+---+----------------------+-----------------------------------------------------------------------+

| 		config.configure();   | 加载主配置文件的方法(hibernate.cfg.xml)	默认加载src/hibernate.cfg.xml |
| 		config.configure(“cn/config/hibernate.cfg.xml”); | 加载指定路径下指定名称的主配置文件        |
| 		config.buildSessionFactory();                      | 创建session的工厂对象        |


| 		session.save(obj);         | 保存一个对象                  |
| 		session.update(emp);       | 更新一个对象                  |
| 		session.saveOrUpdate(emp); | 保存或者更新的方法：          |
| 							       | 	没有设置主键，执行保存；  |
|                                    | 	有设置主键，执行更新操作; |
|                                    | 	如果设置主键不存在报错！  |


+----------------------------+-----------------------------------------------------------------------------+
|    hibernate.dialect       | 操作数据库方言                                                              |
|    hibernate.show_sql      | 显示SQL                                                                     |
|    hibernate.format_sql    | 格式化SQL                                                                   |
|    hibernate.hbm2ddl.auto  | 通过映射转成DDL语句                                                         |
+---+------------------------+-----------------------------------------------------------------------------+
|   | create                 | 每次都会创建一个新的表（测试的时候）                                        |
|   | create-drop            | 每次都会创建一个新的表,当执行结束之后,将创建的这个表删除（测试的时候）      |
|   | update                 | 如果有表使用原来的表.没有表, 创建一个新的表.同时更新表结构.                 |
|   | validate               | 如果有表,使用原来的表.同时校验映射文件与表中字段是否一致如果不一致就会报错. |
+---+------------------------+-----------------------------------------------------------------------------+